/*********************************************************************************
           Material Component Styles
**********************************************************************************/
// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@import "~@angular/material/theming";
@import "./variables";
// Plus imports for other components in your app.
// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();
// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$mat-primary: mat-palette($primary);
$mat-accent: mat-palette($secondary, A200, A100, A400);
// The warn palette is optional (defaults to red).
$mat-warn: mat-palette($mat-red);
// Create the theme object (a Sass map containing all of the palettes).
$codeatopia-theme: mat-light-theme($mat-primary, $mat-accent, $mat-warn);
// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($codeatopia-theme);

/*********************************************************************************
            Custom Component Styles
**********************************************************************************/
// Define a mixin that accepts a theme and outputs the theme-specific styles.
// @mixin candy-carousel-theme($theme) {
//   // Extract the palettes you need from the theme definition.
//   $primary: map-get($theme, primary);
//   $accent: map-get($theme, accent);

//   // Define any styles affected by the theme.
//   .candy-carousel {
//     // Use mat-color to extract individual colors from a palette.
//     background-color: mat-color($primary);
//     border-color: mat-color($accent, A400);
//   }
// }

/*********************************************************************************
            Custom Component Styles - alt
**********************************************************************************/
// add subset of colours also to root (force interpolation of previous functions)
:root {
  --color-primary: #{map-get($primary, 500)};
  --color-secondary: #{map-get($secondary, 500)};
  --color-tertiary: #{map-get($tertiary, 500)};
}
